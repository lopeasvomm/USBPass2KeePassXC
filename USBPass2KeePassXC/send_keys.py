#!/usr/bin/env python3
import sys
import time

HID_DEVICE = '/dev/hidg0'

# HID keycode map for US keyboard (partial, extend as needed)
KEYCODE_MAP = {
    'a': 0x04, 'b': 0x05, 'c': 0x06, 'd': 0x07, 'e': 0x08, 'f': 0x09, 'g': 0x0a, 'h': 0x0b, 'i': 0x0c, 'j': 0x0d, 'k': 0x0e, 'l': 0x0f, 'm': 0x10, 'n': 0x11, 'o': 0x12, 'p': 0x13, 'q': 0x14, 'r': 0x15, 's': 0x16, 't': 0x17, 'u': 0x18, 'v': 0x19, 'w': 0x1a, 'x': 0x1b, 'y': 0x1c, 'z': 0x1d,
    'A': (0x02, 0x04), 'B': (0x02, 0x05), 'C': (0x02, 0x06), 'D': (0x02, 0x07), 'E': (0x02, 0x08), 'F': (0x02, 0x09), 'G': (0x02, 0x0a), 'H': (0x02, 0x0b), 'I': (0x02, 0x0c), 'J': (0x02, 0x0d), 'K': (0x02, 0x0e), 'L': (0x02, 0x0f), 'M': (0x02, 0x10), 'N': (0x02, 0x11), 'O': (0x02, 0x12), 'P': (0x02, 0x13), 'Q': (0x02, 0x14), 'R': (0x02, 0x15), 'S': (0x02, 0x16), 'T': (0x02, 0x17), 'U': (0x02, 0x18), 'V': (0x02, 0x19), 'W': (0x02, 0x1a), 'X': (0x02, 0x1b), 'Y': (0x02, 0x1c), 'Z': (0x02, 0x1d),
    '1': 0x1e, '2': 0x1f, '3': 0x20, '4': 0x21, '5': 0x22, '6': 0x23, '7': 0x24, '8': 0x25, '9': 0x26, '0': 0x27,
    '!': (0x02, 0x1e), '@': (0x02, 0x1f), '#': (0x02, 0x20), '$': (0x02, 0x21), '%': (0x02, 0x22), '^': (0x02, 0x23), '&': (0x02, 0x24), '*': (0x02, 0x25), '(': (0x02, 0x26), ')': (0x02, 0x27),
    ' ': 0x2c, '\n': 0x28, '\t': 0x2b, '-': 0x2d, '_': (0x02, 0x2d), '=': 0x2e, '+': (0x02, 0x2e), '[': 0x2f, '{': (0x02, 0x2f), ']': 0x30, '}': (0x02, 0x30), '\\': 0x31, '|': (0x02, 0x31), ';': 0x33, ':': (0x02, 0x33), "'": 0x34, '"': (0x02, 0x34), ',': 0x36, '<': (0x02, 0x36), '.': 0x37, '>': (0x02, 0x37), '/': 0x38, '?': (0x02, 0x38)
}

def char_to_hid(char):
    if char == '\n':
        return (0x00, 0x28)
    if char == '\t':
        return (0x00, 0x2b)
    code = KEYCODE_MAP.get(char)
    if code is None:
        return None
    if isinstance(code, tuple):
        return code  # (modifier, keycode)
    return (0x00, code)

def send_string(s):
    with open(HID_DEVICE, 'wb') as fd:
        for c in s:
            if c == '\n':
                mod, key = char_to_hid('\n')
            elif c == '\t':
                mod, key = char_to_hid('\t')
            else:
                res = char_to_hid(c)
                if res is None:
                    continue  # skip unknown chars
                mod, key = res
            report = bytes([mod, 0x00, key, 0, 0, 0, 0, 0])
            fd.write(report)
            fd.flush()
            time.sleep(0.05)
            # Release key
            fd.write(b'\x00' * 8)
            fd.flush()
            time.sleep(0.01)

if __name__ == '__main__':
    if len(sys.argv) < 2:
        print("Usage: send_keys.py <string>")
        sys.exit(1)
    send_string(sys.argv[1])
